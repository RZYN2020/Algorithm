{"config":{"lang":["ja"],"separator":"[\\s\\-\uff0c\u3002]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u524d\u8a00","text":"<p>\u5f53\u4eca\u4e92\u8054\u7f51\u65f6\u4ee3\uff0c\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u5df2\u7ecf\u6210\u4e3a\u4e86\u8ba1\u7b97\u673a\u79d1\u5b66\u9886\u57df\u4e2d\u7684\u6838\u5fc3\u77e5\u8bc6\u3002\u65e0\u8bba\u662f\u5728\u5de5\u4e1a\u754c\u8fd8\u662f\u5b66\u672f\u754c\uff0c\u90fd\u9700\u8981\u6df1\u5165\u7406\u89e3\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u7684\u57fa\u672c\u539f\u7406\u548c\u5b9e\u73b0\u65b9\u5f0f\uff0c\u4ee5\u5b9e\u73b0\u9ad8\u6548\u7684\u8ba1\u7b97\u548c\u4f18\u5316\u7684\u7cfb\u7edf\u8bbe\u8ba1\u3002</p> <p>\u4f5c\u4e3a\u4e00\u540d\u8ba1\u7b97\u673a\u79d1\u5b66\u5b66\u4e60\u8005\u6216\u4ece\u4e1a\u8005\uff0c\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u7684\u5b66\u4e60\u662f\u5fc5\u4e0d\u53ef\u5c11\u7684\u3002\u5728\u5b66\u4e60\u8fc7\u7a0b\u4e2d\uff0c\u5237\u9898\u662f\u975e\u5e38\u6709\u6548\u7684\u65b9\u6cd5\u4e4b\u4e00\u3002\u901a\u8fc7\u5237\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u638c\u63e1\u5404\u79cd\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u7684\u5b9e\u73b0\u65b9\u5f0f\u3001\u4f18\u7f3a\u70b9\u3001\u65f6\u95f4\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u7b49\u91cd\u8981\u6982\u5ff5\u3002</p> <p>\u672c\u535a\u5ba2\u65e8\u5728\u8bb0\u5f55\u6211\u5728\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u5b66\u4e60\u4e2d\u7684\u4e00\u4e9b\u5fc3\u5f97\u4f53\u4f1a\u548c\u5237\u9898\u7ecf\u9a8c\uff0c\u4ee5\u53ca\u6211\u5728\u5b9e\u73b0\u8fc7\u7a0b\u4e2d\u9047\u5230\u7684\u95ee\u9898\u548c\u89e3\u51b3\u65b9\u6848\u3002\u6211\u5c06\u5206\u4eab\u4e00\u4e9b\u7ecf\u5178\u95ee\u9898\u7684\u89e3\u6cd5\u548c\u4f18\u5316\uff0c\u4ee5\u53ca\u4e00\u4e9b\u5b9e\u7528\u7684\u6280\u5de7\u548c\u5de5\u5177\uff0c\u5e0c\u671b\u80fd\u591f\u5bf9\u6b63\u5728\u5b66\u4e60\u7b97\u6cd5\u548c\u6570\u636e\u7ed3\u6784\u7684\u540c\u5b66\u4eec\u6709\u6240\u5e2e\u52a9\u3002</p> <p>By ChatGPT</p>"},{"location":"leetcode-contest-355/","title":"Leetcode contest 355","text":"<p>8.23</p> <p>contest-355</p> <p>\u672c\u79d1\u558a\u4e86\u4e09\u5e74\u7684\u8981\u5b66\u7b97\u6cd5\uff0c\u524d\u534a\u5e74\u53c8\u4e3a\u4e86\u627e\u5b9e\u4e60\u558a\u4e86\u597d\u51e0\u4e2a\u6708\u7684\u8981\u5237\u9898\uff0c\u53ef\u7ec8\u7a76\u662f\u6ca1\u6709\u5237\u8d77\u6765\u3002\u4e3b\u8981\u539f\u56e0\u662f\u61d2\uff0c\u6b21\u8981\u539f\u56e0\u662f\u8fd8\u662f\u5728\u601d\u60f3\u4e0a\u8fd8\u662f\u8f7b\u89c6\u4e86\u3002\u3002</p> <p>\u4e0d\u8fc7\u6700\u8fd1\u8d8a\u53d1\u610f\u8bc6\u5230\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u7075\u9b42\u8fd8\u662f\u5173\u4e8e\u8ba1\u7b97\u7684\u3002\u5728\u5404\u4e2a\u8f6f\u4ef6\u7cfb\u7edf\u4e2d\u53cd\u590d\u9047\u5230\u4e00\u4e9b\u4f3c\u66fe\u76f8\u8bc6\u7684\u6a21\u5f0f(\u6bd4\u5982\u5c61\u89c1\u4e0d\u9c9c\u7684\u4e0d\u52a8\u70b9\u7b97\u6cd5)\u4e4b\u540e\uff0c\u6211\u8d8a\u53d1\u611f\u5230\u9700\u8981\u4e00\u5c42\u66f4\u9ad8\u7684\u62bd\u8c61\u6765\u7edf\u4e00\u8fd9\u4e9b\u5173\u4e8e\u8ba1\u7b97\u7684\u6a21\u5f0f\u4e86\u3002\u4f46\u662f\u8ba1\u7b97\u53c8\u597d\u50cf\u5f80\u5f80\u96be\u4ee5\u62bd\u8c61\uff0c\u6bcf\u4e2a\u7b97\u6cd5\u672c\u8eab\u5c31\u8f83\u4e3a\u590d\u6742\u4e14\u7b97\u6cd5\u4e4b\u95f4\u7684\u5171\u540c\u6027\u53c8\u8f83\u5c11\uff0c\u652f\u914d\u7b97\u6cd5\u9898\u76ee\u7684\u597d\u50cf\u53ea\u662f\u4e9b\u6a21\u7cca\u7684\u201c\u601d\u60f3\u201d\uff0c\u5982\u201c\u5206\u6cbb\u201d\uff0c\u201c\u52a8\u6001\u89c4\u5212\u201d\u4e4b\u7c7b\u7684\u3002\u8fd9\u4e9b\u601d\u60f3\u53c8\u4ee5\u610f\u60f3\u4e0d\u5230\u7684\u65b9\u5f0f\u7ed3\u5408\u5728\u4e00\u4e2a\u9898\u76ee\u4e2d\uff0c\u8ba9\u4eba\u65e0\u6cd5\u901a\u8fc7\u4e00\u79cd\u201c\u7b97\u6cd5\u201d\u53bb\u89e3\u51b3\u6240\u6709\u7b97\u6cd5\u95ee\u9898\u3002\u76f8\u6bd4\u4e8e\u4eba\u4e3a\u9650\u5b9a\u7684\u903b\u8f91\u63a8\u7406\u89c4\u5219\uff0c\u8fd9\u79cd\u7075\u6d3b\u591a\u53d8\u7684\u201c\u601d\u60f3\u201d\u4f3c\u4e4e\u624d\u662f\u66f4\u4e3a\u666e\u904d\u7684\u3002\u5bf9\u4e8e\u601d\u60f3\u7684\u5b66\u4e60\u90a3\u5c31\u53ea\u80fd\u9760\u201c\u609f\u201d\u4e86\uff0c\u800c\u201c\u609f\u201d\u4e0d\u80fd\u5149\u9760\u770b\uff0c\u5fc5\u987b\u8981\u601d\u8003\uff0c\u52a8\u624b\u540e\u624d\u80fd\u4f53\u4f1a\uff0c\u56e0\u6b64\u505a\u9898\u4e5f\u662f\u5fc5\u4e0d\u53ef\u5c11\u4e86\u3002</p> <p>\u6210\u529f\u8bf4\u670d\u81ea\u5df1\u540e\uff0c\u7ec8\u4e8e\u505a\u4e86\u4e00\u6b21leetcode\u5468\u8d5b\uff0c\u7ed3\u679c\u81ea\u7136\u662f\u60e8\u4e0d\u5fcd\u7779\uff0c\u53ea\u8fc7\u4e86\u4e24\u9053\u7b80\u5355\u3002\u3002\u5e0c\u671b\u4ee5\u540e\u575a\u6301\u4e0b\u53bb\u80fd\u6709\u8fdb\u6b65\u5427\u3002</p> <p>\u6211\u611f\u89c9Python\u6700\u9002\u5408\u7528\u6765\u505a\u7b97\u6cd5\u9898\uff0c\u53ef\u4ee5\u8ba9\u4eba\u53ea\u5173\u6ce8\u7eaf\u7cb9\u7684\u8ba1\u7b97\u800c\u5f88\u5c11\u62c5\u5fc3\u8bed\u8a00\u672c\u8eab\u7684\u95ee\u9898\u3002\u4e0d\u8fc7\u56e0\u4e3a\u60f3\u7740\u987a\u4fbf\u5b66\u4e60\u4e0bRust\uff0c\u5c31\u5148\u7528Rust\u505a\u51e0\u6b21\u9898\u3002</p>"},{"location":"leetcode-contest-355/#2789","title":"2789. \u5408\u5e76\u540e\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u5143\u7d20","text":"<pre><code>impl Solution {\n    pub fn max_array_value(nums: Vec&lt;i32&gt;) -&gt; i64 {\n        nums.into_iter().rfold(0i64, |acc, num| {\n            if acc &gt;= num as i64 {\n                acc + num as i64\n            } else {\n                num as i64\n            }\n        })\n    }\n}\n</code></pre> <p>\u76f4\u89c9\uff1a\u89c2\u5bdf \u64cd\u4f5c \uff0c\u5bb9\u6613\u5f97\u51fa\u82e5\u6570\u7ec4\u4e2d\u6709\u76f8\u90bb\u7684\u4e09\u4e2a\u5143\u7d20 abc\uff0c\u82e5 a &lt; b &lt; c \u5219\u4e00\u5b9a\u6709  a &lt; b + c\uff0c\u6240\u4ee5\u5bf9\u4e8e\u6570\u7ec4\u7684\u9012\u589e\u533a\u95f4\u53ef\u4ee5\u4ece\u53f3\u5230\u5de6\u8fdb\u884c\u64cd\u4f5c\u5c06\u533a\u95f4\u5185\u6240\u6709\u6570\u52a0\u8d77\u6765\uff1b\u64cd\u4f5c\u540e\u4e0d\u5f71\u54cd\u8be5\u533a\u95f4\u53f3\u4fa7\u7684\u9012\u51cf\u533a\u95f4\uff0c\u56e0\u6b64\u53ef\u4ee5\u4ece\u53f3\u5411\u5de6\u626b\u63cf\u5408\u5e76\u6240\u6709\u9012\u589e\u533a\u95f4(on fly)\u3002</p>"},{"location":"leetcode-contest-355/#2788","title":"2788. \u6309\u5206\u9694\u7b26\u62c6\u5206\u5b57\u7b26\u4e32","text":"<pre><code>impl Solution {\n    pub fn split_words_by_separator(words: Vec&lt;String&gt;, separator: char) -&gt; Vec&lt;String&gt; {\n        words\n            .into_iter()\n            .flat_map(|word| {\n                word.split(separator)\n                    .filter(|w| !w.is_empty())\n                    .map(str::to_string)\n                    .collect::&lt;Vec&lt;String&gt;&gt;()\n            })\n            .collect()\n    }\n}\n</code></pre> <p>\u76f4\u89c9\uff1a\u5206\u5272\u5373\u53ef\u3002\u7528flat_map\u65b9\u4fbf\u4e9b\u3002</p>"},{"location":"leetcode-contest-355/#2791","title":"2791. \u6811\u4e2d\u53ef\u4ee5\u5f62\u6210\u56de\u6587\u7684\u8def\u5f84\u6570","text":"<pre><code>use std::{collections::{HashMap, btree_map::Entry}, process::id};\nimpl Solution {\n    #[inline(always)]\n    fn to_bits(c: char) -&gt; Option&lt;u32&gt; {\n        let offset = c as u32 - 'a' as u32;\n        if offset &lt; 26 {\n            return Some(1 &lt;&lt; offset);\n        }\n        None\n    }\n\n    pub fn count_palindrome_paths(parent: Vec&lt;i32&gt;, s: String) -&gt; i64 {\n        let mut pal_cnt: i64 = 0;\n        let mut xors: HashMap&lt;u32, i64&gt; = HashMap::new();\n        let chars: Vec&lt;char&gt; = s.chars().collect();\n        let mut graph: HashMap&lt;i32, Vec&lt;i32&gt;&gt; = HashMap::new();\n        for (idx, ele) in parent.iter().enumerate() {\n            graph.entry(*ele).or_insert(vec![]).push(idx as i32);\n        }\n\n        xors.insert(0, 1);\n        let mut stack: Vec&lt;(i32, u32)&gt; = vec![(0, 0)];\n        while let Some((cur, p_xor)) = stack.pop() {\n            if let Some(v) = graph.get(&amp;cur) {\n                for nxt in v {\n                    let xor = p_xor ^ Self::to_bits(*chars.get(*nxt as usize).unwrap()).unwrap();\n                    pal_cnt += (0..26)\n                        .into_iter()\n                        .map(|i| *xors.get(&amp;((1 &lt;&lt; i) ^ xor)).unwrap_or(&amp;0))\n                        .sum::&lt;i64&gt;();\n                    pal_cnt += xors.get(&amp;xor).unwrap_or(&amp;0);\n                    *xors.entry(xor).or_insert(0) += 1;\n                    stack.push((*nxt, xor));\n                }\n            }\n        }\n        return pal_cnt as i64;\n    }\n}\n</code></pre> <p>\u76f4\u89c9\uff1a</p> <ol> <li> <p>\u9700\u8981\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u70b9\u5bf9\u7136\u540e\u5224\u65ad\u3002</p> </li> <li> <p>\u5df2\u77e5\u8def\u5f84\u5982\u4f55\u5224\u65ad\u662f\u5426\u56de\u6587\uff1f-&gt; \u5947\u5076\u6027\u5373\u53ef\u5224\u65ad</p> </li> <li> <p>\u5df2\u77e5\u4e00\u5bf9\u70b9\u5982\u4f55\u77e5\u9053\u8def\u5f84\uff1f-&gt; \u4ecelca\u51fa\u53d1\u7684\u4e24\u6761\u8def\u5f84\u5408\u5e76(\u5224\u65ad\u56de\u6587\u6070\u597d\u4e5f\u4e0d\u9700\u8981\u8003\u8651\u65b9\u5411\uff0c\u6240\u4ee5\u53ef\u4ee5\u5206\u522b\u8d70\u7136\u540e\u5408\u5e76)</p> </li> <li> <p>\u5982\u4f55\u8868\u793a\u8def\u5f84\u4fe1\u606f\uff1f-&gt; \u5982\u679c\u7528HashMap\u9700\u8981\u591a\u6b21copy\uff0c\u8003\u8651\u5230\u53ea\u9700\u8981\u4fdd\u5b58\u5947\u5076\u4fe1\u606f\u4e14\u5b57\u6bcd\u8868\u6709\u9650\uff0c\u7528bitset\u5373\u53ef</p> </li> <li> <p>\u4f7f\u7528bitset\u4e4b\u540e\u53d1\u73b0\u8def\u5f84\u7684\u5408\u5e76\u6070\u597d\u53ef\u4ee5\u7528bitset\u4e4b\u95f4\u7684\u4ea6\u6216\u8868\u793a</p> </li> <li> <p>\u5982\u4f55\u679a\u4e3e\u6240\u6709\u7684\u70b9\u5bf9\uff1f\u70b9\u5bf9\u4e4b\u95f4\u662f\u5426\u6709\u4f9d\u8d56\u5173\u7cfb\u53ef\u4ee5\u5229\u7528\uff1f</p> </li> <li> <p>\u9012\u5f52\u904d\u5386\uff0c\u9488\u5bf9\u6bcf\u4e2a\u8282\u70b9\u8fdb\u884c\u64cd\u4f5c</p> <p>\u601d\u8def\u7c7b\u4f3c\u4e8e\u70b9\u5206\u6cbb</p> </li> <li> <p>\u7684\u786e\u662f\u6709\u4f9d\u8d56\u5173\u7cfb\uff08\u7236\u8282\u70b9\u53ef\u5229\u7528\u5b50\u8282\u70b9\u5df2\u77e5\u7684\u8def\u5f84\u4fe1\u606f\uff09\uff0c\u4f46\u96be\u4ee5\u5229\u7528\uff08\u56e0\u4e3a\u9700\u8981\u5b50\u8282\u70b9\u4fdd\u5b58\u6240\u6709\u8def\u5f84\u4fe1\u606f\uff0c\u8fd9\u5f00\u9500\u53c8\u4e0d\u5c0f\uff09\u3002\u6b64\u5916\u4e00\u4e2a\u8282\u70b9\u4f5c\u4e3alca\u65f6\u4e24\u4e2a\u5b50\u6811\u4e92\u76f8\u5339\u914d\u65f6\u95f4\u590d\u6742\u5ea6\u8fc7\u5927(n^2)</p> </li> <li> <p>\u8fd9\u91cc\u5361\u58f3\u4e86\uff0c\u7136\u540e\u770b\u9898\u89e3\uff1a</p> </li> <li> <p>\u5982\u4f55\u5229\u7528\u4f9d\u8d56\u5173\u7cfb\u51cf\u5c11\u8ba1\u7b97\uff1f\u8003\u8651 a ^ b ^ a = b \u56e0\u6b64\u8def\u5f84 a -&gt; b -&gt; c ^ a -&gt; b -&gt; d = c -&gt;b -&gt; d\u3002\u56e0\u4e3a\u8def\u5f84\u95f4\u7684\u76f8\u4e92\u62b5\u6d88\u3002\u6211\u4eec\u4e0d\u9700\u8981\u5355\u72ec\u5b58\u50a8\u6bcf\u4e2a\u70b9\u5230\u5b83\u67d0\u4e2a\u7956\u5148\u8282\u70b9\u7684\u8def\u5f84\uff0c\u4efb\u4f55\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u8def\u5f84\u90fd\u53ef\u4ee5\u6709\u4e24\u4e2a\u70b9\u5230\u6839\u8282\u70b9\u7684\u8def\u5f84\u5f02\u6216\u5f97\u5230\uff01</p> </li> <li> <p>\u679a\u4e3e\u70b9\u5bf9\u65f6\u53ef\u4ee5\u5229\u7528\u4e24\u6570\u4e4b\u548c\u7684\u601d\u8def\u3002\uff08\u4e0d\u8981\u88ab\u5b57\u6bcd\u8868\u5413\u5230\uff0c\u53ea\u8981\u5b83\u6709\u9650\uff0c\u5c31\u662fO(1)\uff01</p> </li> <li> <p>\u6240\u4ee5\u6700\u540e\u5c31\u80fd\u4ee5<code>O(n)</code>\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u89e3\u51b3\u8fd9\u9053\u9898</p> </li> </ol>"},{"location":"leetcode-contest-355/#2790","title":"2790. \u957f\u5ea6\u9012\u589e\u7ec4\u7684\u6700\u5927\u6570\u76ee","text":"<pre><code>impl Solution {\n    pub fn max_increasing_groups(usage_limits: Vec&lt;i32&gt;) -&gt; i32 {\n        let mut ord_limits = usage_limits.into_iter().map(|x| x as i64).collect::&lt;Vec&lt;i64&gt;&gt;();\n        ord_limits.sort();\n        ord_limits.into_iter()\n            .fold((0, 0), |(cur, rem), num| {\n                if rem + num &gt;= cur + 1 {\n                    (cur + 1, rem + num - cur - 1)\n                } else {\n                    (cur, rem + num)\n                }\n            })\n            .0 as i32\n    }\n}\n</code></pre> <p>\u76f4\u89c9\uff1a</p> <ol> <li>\u5148\u6392\u4e2a\u5e8f\uff0c\u8bd5\u7740\u6784\u9020\u4e00\u4e0b</li> <li>\u4ece\u591a\u5230\u5c11\u5c1d\u8bd5\u903c\u8fd1\u9898\u76ee\u8981\u6c42\uff0c\u591a\u7684\u53ef\u4ee5\u6d88\u53bb</li> <li>\u53d1\u73b0\u601d\u8def\u4e0d\u592a\u5bf9\uff0c\u53c8\u8003\u8651\u5982\u4f55\u628a\u4e00\u4e2a\u9012\u589e\u5e8f\u5217\u6253\u4e71\uff0c\u82e5\u6709\u4e86\u6253\u4e71\u7b97\u6cd5\u80fd\u5426\u9006\u5411\u8fd8\u539f</li> <li>\u601d\u7d22\u65e0\u679c\uff0c\u770b\u9898\u89e3\uff1a</li> <li>\u4ece\u5c11\u5230\u591a\u5c1d\u8bd5\u903c\u8fd1\u9898\u76ee\u8981\u6c42\uff0c\u591a\u7684\u53ef\u4ee5\u8865\u5230\u540e\u9762\uff08\u9707\u60ca</li> </ol>"},{"location":"leetcode-contest-355/#_1","title":"\u53cd\u601d","text":""},{"location":"leetcode-contest-355/#_2","title":"\u601d\u8003\u65b9\u5f0f","text":"<p>\u505a\u4e86\u505a\u9898\u53d1\u73b0\u81ea\u5df1\u7684\u601d\u7ef4\u8fd8\u662f\u5f88\u5355\u7eaf\u7684\u3002\u3002\u3002</p> <p>\u505a\u9898\u5c31\u4e24\u4e2a\u601d\u8def\uff1a</p> <ol> <li>\u679a\u4e3e\u5e76\u5206\u522b\u5224\u65ad\uff0c\u7136\u540e\u5728\u6b64\u57fa\u7840\u4e0a\u770b\u80fd\u4e0d\u80fd\u6d88\u9664\u4f9d\u8d56\u5173\u7cfb\uff08\u679a\u4e3e\u4e5f\u53ef\u4ee5\u662f\u4e00\u79cd\u6784\u9020\uff0c\u4e0d\u8fc7\u663e\u7136\u6784\u9020\u96be\u5ea6\u592a\u5927</li> <li>\u6784\u9020\uff0c\u6b63\u5411\u4e0d\u884c\u5c31\u53cd\u5411\uff08\u6784\u9020\u4e5f\u53ef\u4ee5\u7b97\u4e00\u79cd\u679a\u4e3e\uff0c\u679a\u4e3e\u6240\u6709\u53ef\u80fd\u7ed3\u6784\u5e76\u5224\u65ad\u662f\u5426\u6ee1\u8db3\u6784\u9020\u6761\u4ef6-&gt;\u4f46\u662f\u6709\u7684\u9898\u663e\u7136\u641c\u7d22\u7a7a\u95f4\u592a\u5927\uff0c\u53ea\u80fd\u6784\u9020</li> </ol> <p>\u4e00\u4e2a\u6280\u5de7\uff1a</p> <ol> <li>\u7279\u5316\uff0c\u4e0d\u7528\u7684\u4fe1\u606f\u5c31\u522b\u7ba1\u4e86\uff0c\u964d\u4f4e\u70b9\u5e38\u6570\u65f6\u95f4\u3002</li> </ol> <p>\u540e\u9762\u4e24\u4e2a\u96be\u9898\u90fd\u662f\u8fd9\u6837\u5957\uff0c\u4f46\u5374\u6ca1\u6709\u5957\u6210\u3002</p> <p>\u5c1d\u8bd5\u6cdb\u5316\u4e00\u4e0b\u51e0\u4e2a\u9898\uff1a</p> <p>\u7ed9\u67d0\u4e2a\u7ed3\u6784\u7684\u5b9a\u4e49\uff0c\u6c42\u6ee1\u8db3\u67d0\u4e2a\u6027\u8d28\u7684\u7ed3\u6784\u7684\u96c6\u5408\u3002\u4e0d\u540c\u70b9\u5728\u4e8e\u7ed3\u6784\u7684\u5b9a\u4e49\u65b9\u5f0f\u4ee5\u53ca\u6027\u8d28\uff08\u597d\u50cf\u6ca1\u5565\u7528</p> <p>\u601d\u8def\u597d\u50cf\u5c31\u662f\u8fd9\u6837\uff0c\u4f46\u4e3a\u4ec0\u4e48\u505a\u4e0d\u51fa\u6765\u5462\uff1f</p> <p>\u5173\u952e\u5c31\u5728\u4e8e\u5982\u4f55\u6d88\u9664\u201c\u4f9d\u8d56\u5173\u7cfb\u201d\u4ee5\u53ca\u5982\u4f55\u201c\u6784\u9020\u201d\u662f\u9760\u76f4\u89c9\u7684\u3002\u3002\u3002\u4f46\u662f\u6211\u7ecf\u8fc7\u7684\u8bad\u7ec3\u8f83\u5c11\u6ca1\u80fd\u517b\u6210\u8fd9\u6837\u7684\u76f4\u89c9\u3002</p> <p>\u62ff 2791 \u6765\u770b\uff0c\u5176\u4f9d\u8d56\u5173\u7cfb\u5728\u4e8e \u4efb\u610f\u4e24\u70b9\u4e4b\u95f4\u7684 \u8def\u5f84 \u4f9d\u8d56\u4e8e \u5b83\u4eec\u5230 \u6839\u8282\u70b9 \u7684\u8def\u5f84\uff0c\u4e14\u8fd9\u4e2a\u4f9d\u8d56\u5173\u7cfb\u662f\u7531\u5f02\u6216\u8fd0\u7b97\u7684\u6027\u8d28\u4fdd\u8bc1\u7684\u3002\u4f46\u662f\u6211\u6ca1\u60f3\u5230\u5f02\u6216\u7684\u8fd9\u4e2a\u6027\u8d28\uff0c\u6ca1\u6709\u8fd9\u4e2a\u6027\u8d28\u7684\u63d0\u793a\u81ea\u7136\u4e5f\u5c31\u60f3\u4e0d\u5230\u771f\u6b63\u7684\u4f9d\u8d56\u5173\u7cfb\u4e86\u3002\u800c\u4e4b\u524d\u505a\u7684\u52a8\u6001\u89c4\u5212\u53c8\u7ed9\u4e86\u6211\u4e00\u79cd\u4e00\u5b9a\u662f\u201c\u5b50\u8282\u70b9\u4f9d\u8d56\u7236\u8282\u70b9\u201d\u7684\u9519\u89c9\uff0c\u6240\u4ee5\u5c31\u4e00\u76f4\u5f80\u8fd9\u65b9\u9762\u8003\u8651\u4e86\u3002</p> <p>\u62ff 2790  \u6765\u770b\uff0c\u5982\u679c\u6211\u5728\u8003\u8651\u76f4\u89c92\u65f6\u7a0d\u5fae\u53cd\u4e00\u4e0b\u5c31\u53ef\u4ee5\u628a\u6784\u9020\u60f3\u51fa\u6765\u4e86\uff0c\u4f46\u662f\u5374\u6700\u540e\u9677\u5165\u4e86\u9519\u8bef\u7684\u601d\u8def\u91cc\u53bb\u3002</p> <p>\u4e24\u9053\u9898\u56e0\u4e3a\u611f\u89c9\u505a\u4e0d\u51fa\u9677\u5165\u6b7b\u80e1\u540c\u6765\u800c\u653e\u5f03\u4e86\uff0c\u4f46\u5982\u679c\u540e\u9762\u80fd\u5728\u505a\u9898\u7684\u540c\u65f6\u8bb0\u5f55\u81ea\u5df1\u7684\u601d\u8003\u65b9\u5f0f\uff0c\u4e5f\u8bb8\u80fd\u907f\u514d\u8fd9\u79cd\u9677\u5165\u6b7b\u80e1\u540c\u7684\u611f\u89c9\u3002</p>"},{"location":"leetcode-contest-355/#_3","title":"\u7b97\u6cd5","text":"<p>\u67e5 2791 \u76f8\u5173\u8d44\u6599\u65f6\u53d1\u73b0\u4e86\u8bb8\u591a\u7b97\u6cd5\uff1a</p> <p>\u5982\u4e0a\u9762\u63d0\u5230\u7684\u70b9\u5206\u6cbb\uff0c\u4ee5\u53ca\u6c42lca\u7684\u7b97\u6cd5\u3002\u5ffd\u7136\u60f3\u8d77\u6765\u4e4b\u524d\u5199\u7f16\u8bd1\u5668\u505a\u7c7b\u578b\u63a8\u5bfc\u6c42\u6700\u5c0f\u7236\u7c7b\u65f6\u4e5f\u6d89\u53ca\u6c42lca\uff0c\u4f46\u5f53\u65f6\u597d\u50cf\u7528\u4e86\u4e00\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6\u975e\u5e38\u9ad8\u7684\u66b4\u529b\u505a\u6cd5\u3002\u3002</p> <p>\u53e6\u5916\u505a\u8fd9\u4efd\u7b14\u8bb0\u65f6\u672c\u6765\u6253\u7b97\u65e2\u5199\u201c\u76f4\u89c9\u201d\uff0c\u4e5f\u5199\u8bc1\u660e\u7684\uff0c\u4f46\u662f\u611f\u89c9\u5199\u7b97\u6cd5\u7684\u8bc1\u660e\u6bd4\u5199\u7b97\u6cd5\u96be\u591a\u4e86\u3002\u3002\u3002\u5bf9\u4e8e\u8fd9\u79cd\u6709\u6d4b\u8bd5\u7528\u4f8b\u7684\u9898\u76ee\u8fd8\u662f\u76f8\u4fe1\u76f4\u89c9\u4e86\u3002\u3002\u3002</p>"},{"location":"leetcode-contest-355/#rust","title":"Rust","text":"<p>rust\u7684\u8bb8\u591a\u51fd\u6570\u5f0f\u7279\u6027\u548c\u96c6\u5408\u975e\u5e38\u6709\u7528\u3002</p> <p>JonGjengset\u7684youtube\u9891\u9053\u6709\u5173\u4e8e\u5b83\u4eec\u7684\u5f88\u597d\u7684\u4ecb\u7ecd</p> <ul> <li>collection</li> <li>iter</li> </ul> <p>\u53d1\u73b0\u4e24\u4e2a\u6709\u5173rust\u7684\u6709\u8da3\u7684\u9879\u76ee\uff1a</p> <ul> <li>frunk crate\uff1arust\u51fd\u6570\u5f0f\u7f16\u7a0b\u652f\u6301 </li> <li>cranelift\uff1arust\u4f3c\u4e4e\u8ba1\u5212\u672a\u6765\u7528\u8fd9\u4e2a\u66ff\u4ee3llvm\u4f5c\u4e3a\u540e\u7aef(\u8fd9\u6837\u5c31\u5b8c\u5168\u81ea\u4e3e\u4e86\uff01) </li> </ul> <p>\u6587\u7ae0:</p> <ul> <li>Rust\u7684\u7c7b\u578b\u7cfb\u7edf\u662f\u56fe\u7075\u5b8c\u5907\u7684\uff01</li> <li>ebpf\u4e0d\u662f\u56fe\u7075\u5b8c\u5907\u7684\uff01</li> </ul> <p>\u4e66\u7c4d\uff1a</p> <ul> <li>effective rust</li> </ul> <p>\u8bfe\u7a0b:</p> <ul> <li>15-816 Linear Logic  by Frank Pfenning </li> </ul>"}]}